#include <DHT.h>
#define DHTTYPE DHT11
#include <SFE_BMP180.h>
#include <Wire.h>


int Rain_digsig = A0; //analog pin A0 for raindrop sensor
DHT dht(3,DHTTYPE); //digital pin3 for humiture sensor(DHT)
SFE_BMP180 pressure;

const int photocellPin = A1; //analog pin A1 for photoresistor
const int ledPin = 13;  
int outputValue = 0;  //output value for photoresistor

//starting all sensors
void setup() {
    Serial.begin(9600);
    dht.begin();
    pressure.begin();
    pinMode(ledPin,OUTPUT);

}
 
void loop() {

    //raindrop value
    int rain = analogRead(Rain_digsig);
    //Serial.println("Rain Level ");
    Serial.println(rain);
    if (rain < 500) {
        Serial.println("Raining");
    } else {
        Serial.println("Not Raining");
    }

    //humiture sensor
    //dht value
    float value2 = dht.readTemperature();  //temp value
    float value3 = dht.readHumidity();  // humi value

  //print the datas on serial monitor
    Serial.print("Temperature = ");
    Serial.print(value2);
    Serial.print(" Humidity = ");
    Serial.print(value3);

  //barometer value
    char status;
    double T,P,p0,a;

  status = pressure.startTemperature();
  if (status != 0)
  {
    delay(status);

    status = pressure.getTemperature(T);
    if(status !=0)
    {
      //Serial.print("Temperature: ");
      //Serial.print(T,2);
      //Serial.println("deg C ");
      //Serial.println("     "); //skip a line

      status = pressure.startPressure(3);
      if(status != 0)
      {
        delay(status);

        status = pressure.getPressure(P,T);
        if(status != 0)
        {
          Serial.print("Pressure: ");
          Serial.print(P,2);
          Serial.println("          "); //skipping lines for easier reading
          Serial.println("          ");
        }
        else Serial.println("error retrieving pressure measurements\n");
      }
      else Serial.println("error starting pressure measurement\n");
    }
    else Serial.println("error retrieving temperature measurement\n");
  }

  //photoresistor
  outputValue = analogRead(photocellPin);
  if(outputValue >= 400)
  {
    digitalWrite(ledPin,HIGH);
    Serial.print("Light Intensity: ");
    Serial.println(outputValue);
    //turn on the led
  }
  else
  {
    digitalWrite(ledPin,LOW);
  }
  
    
    delay(2000);
    Serial.println();
}
